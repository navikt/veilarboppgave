name: Build, push and deploy
on: push
env:
  IMAGE_TAG: ${{ github.sha }}
  PRINT_PAYLOAD: true
permissions:
  packages: write
  contents: write
  id-token: write
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Run maven tests
        run: mvn -B verify

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: Build maven artifacts
        run: mvn -Dgithub.token=${{ secrets.GITHUB_TOKEN }} -B package -D skipTests

      - name: Build and push Docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: obo
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    name: Deploy application to dev
    if: github.ref == 'refs/heads/main'
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/application/application-config-dev.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy application to prod
    if: github.ref == 'refs/heads/main'
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Deploy application
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/application/application-config-prod.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: Release to prod
          target_commitish: main
          tag_name: release/prod@${{ env.IMAGE_TAG }}
          prerelease: false
